=== SUBPIXEL


== TODO

# Post-list doesn't always format correctly on back button from FAQ (doesn't pick up class on post-list - async fetch?)
# Validate datePosted logic -- seems to be doing weird things
= Backend first pass
	- Research how AWS would work
		> Even if I go with SSR for the site, I need client-side for editor...
		+ Set up domain with Route 43 or whatever
		+ Set up S3 bucket
		+ Set up CDN
		- Set up Lambda calls to access where necessary
			- Install serverless
		- Database
			! DynamoDB setup is a nightmare -- switch to Webpack 4 first?
				? Actually... commonDB should fix this, hopefully
			x Find relevant Aurora Serverless v1 SPA/blog resources
				x Aurora Serverless an option with my editor situation?
				> Maybe not... DynamoDB can be made to work for tags, probably
			- Design DB access patterns
				- Write down what queries I need to make, and when
			- Set up posts table
			- Set up tabs table
			? Set up quips table
				> This might be better as a local content file so that I can keep it doing serverless rendering with runtime JS
			- Set up threads table
		- Set up Cognito for security
	- Make plan - DB, HTML/SVG/JSON/texture files
	- Integrate Showdown for Markdown conversion on the server side
= MVP 2
	+ Responsive format for public-facing site
		- FAQ header center
		- <gl-code> container mobile version
		- Full-page scroll instead of content
		- Touch controls for <web-gl>
	* Finish post
		- Cut up into Diffuse and Specular
	* WebGL presentation container
		> Instead of always being little floating boxes, making them a full-width block with shader code and textures and so on
		! Cache shader fetches alongside webgl viewports for editor performance
		+ Construct new WebGLElement container
			? Add button to show/hide
			+ Desktop version
				+ Full width
				+ Minimum height
				+ Use a split-panel with a custom divider width and handle with snap setting
			- Mobile version
				- Full width
				- Minimum height
				+ Make right panel into its own component to support top/bottom split?
				x Use a split-panel with a custom divider width and handle with snap setting
					x Top/bottom or left/right depending on portrait or landscape layout
					> Portrait can't use split-panel, requires block layout elements
				- Alternate mobile-width/portrait vertical block layout for <web-gl> and <gl-data> elements
			? Add "fullscreen" popup button
			+ ! Is static <gl-code> animating too?
				> No, if one <web-gl> is animating then the WebGL object is running an animated render (even if not every element is participating).  So that means that every element will get the message and show the framerate...
				+ Hide framerate on non-animating elements
			+ Get fps display working or hide it
			+ Move camera
				+ Middle click/drag
				+ L&R click/drag
		+ Construct new WebGLElement container
			+ Support selecting an object to show its shaders/texture(s)
				- Support clicking to select
			- Show state
				> Future work, not MVP I think
				- Texture sampler state
				- Depth/stencil state
				- Clear state
				- Cull state
				- Blend state
				> Is it possible to interrogate WebGL about all this state and cache it every render?
			? Show texture
				? Show mip levels
	- Subtitle topics as regions that can be opened into post content
	- GPU model map
		- Basic SVG layout of a system with CPU, RAM, VS, PS, VRAM, Rasterizer, etc.
		- Animated movement along path showing transfer of data
		- Flashing to show calculations
		- Each section of content has a correlated map state
		- When reaching a new section, it "pings" if the map state changed, causing a timed gentle "pulse" of the map tab on the screen edge (top?)
		- The user can tap the tab to bring out a drawer with the GPU map and see the new area, or leave it out while reading
	+ Setup Rollup dev environment
		- Make dev environment more useful
			- Build incrementally
			- Watch for changes
			- Best possible source mapping
	- Inline info line
		? What does this mean
	- Work out image caption CSS for FAQ
		> I have the image caption example in place, but it'll require a new component to do this properly (or at a minimum, a showdown extension)
	- Prep for SSR
		- Stop async loading js files
= Basic styling
	+ Write example post
		+ Create webgl content for example post
		+ Figure out embedding web-gl content from Markdown
			> MD formatting rule: after </web-gl>, must have space, then 2 newlines in order to get correct float/clear behavior
		- Finish example post
	- Showdown-highlight module doesn't work in TS for whatever reason :(
		> Only necessary for pre/code blocks inline, so not MVP
+ # <web-gl> svg is too tall for the container (see with error svg showing) -- fix height or use overflow-clip
	? Fix failed... Is this still happening?
= <web-gl> Enhancements
	- Load and display OBJ format
	- Support external interaction, like radio button to change obj
	- "Pop-out" support - window that fills width
	? Revisit canvas per <web-gl>
		> Now that I understand coordinates better, maybe I can make it work?
		> Maybe unnecessary if I get style="transform: translateY" working
	- Disable wheel-scrolling on ortho-camera web-gl components
= Basic styling
	? Build GPU SVG model
	- Post item: make title background a web-gl scene
	+ Convert to Twind for layout
		- Various layout values for responsive page sizing
= Wrap <svg> with component that supports aspect-ratio
	- Take "aspect-ratio" property
	? Override "width" and "height"
	- Watch "aspect-ratio", "width", "height" for change and fill in the other attribute if the other is undefined based on "aspect-ratio", if defined
= Source code view
	? "Copy to Clipboard" button
= Backend
	- Consider enabling Origin Shield as extra CloudFront caching layer
= Quips
	- These should come from a JSON data file on the server with a shorter cache time so that I can update it as desired without needing to manually invalidate it
	- Local runtime JS script in the final HTML page loads the JSON and picks a quip to slot in
		? Set server to serve .JSON with MIME type of .JS
= Editor
	+ Add "Publish" slider (above Save button?)
		- The post-list only shows posts with the "publish" flag set
	- Look at DynamoDB Transactions for Save operations


=== DONE

= MVP
	+ One fully-complete post
		+ Including WebGL content
		> I've written an example one already, start with that?
		+ # Markdown conversion doesn't seem to be working correctly
			> The HTML is getting mangled, and I'm not sure it's Showdown doing it
			+ # It's my class name bindings regex
+ # index.ts needs to handle bad URLs or any other vaadin router exceptions with redirect to /
+ # Drag mouse event logic only works for first <gl-code>
	> I think I fixed this?
+ # WebGL viewport caching doesn't help in editor -- it makes new containers on every convert
+ # FOV calculation doesn't work when squishing the panel
= MVP
	x Showdown plugin to do double-spaced sentence ends
		> Implemented and commented out
	x ! <web-gl> render improvement: canvas style="transform: translateY(1828px);" to make scrolling fluid
		> This won't work without an overhaul where the canvas is in the scrolling container and as tall as the content
		> Instead, this time would be better spent with the per-element canvas approach
= <web-gl> Enhancements
	+ Support interaction, like click/drag-to-move camera (or button for different ortho)
= Source code view
	+ Show vs/fs in tab or drawer with <web-gl>
	+ Show with syntax coloring
	+ Use source code font - Source Code Pro?
= Basic styling
	+ ! Showdown isn't creating proper MD
		+ Newlines between lines should be creating <p>
		+ Double spaces at the end of lines should be creating <br>
+ # <web-gl> svg is too tall for the container (see with error svg showing) -- fix height or use overflow-clip
	> This seems to keep happening no matter what
+ # WebGLViewport is drawing over padding area, not inside it
	> Can't use padding, because of box-sizing: issues
= Editor
	+ Add "Publish" slider (above Save button?)
		+ This will set a publish flag and stop updating the modified date
		> This way I can work on and save unpublished posts
= MVP
	+ Create favicon
= Dev workflow
	x Branch GitHub into Test and Prod
		x Research proper setup - branch or fork?
	x Make test version of website on AWS
		x Separate S3 bucket that is public with ACL and IAM access limit to certain roles/users?
			x Set up CloudFront connection for Test bucket
		x Set up two dist build steps, one for Test and one for Prod
			x Make sure each is setting the appropriate test/prod values for the content
			x Lit production/development
			x Minify everything
			x Hash everything
			x Combine and hash CSS?
	+ Make task in workspace to do a sanitized test of the production build
		+ Cleaned tree to work in (eg, dist/ becomes the root)
		+ Properly copy all assets to build
		+ Copy index.html to dist/
		+ Build into dist/
		+ Start web server out of dist/ just like Start does (except without tsc -watch)
	+ Set up CI/CD process for testing/preview
		+ Hook up Vercel to dev and main with automatic building and live URLs
	+ Move github repo and Vercel to @subpixelsite@gmail.com user
	+ Set up on-demand process for pushing main to AWS
		+ Set up Github Action/Workflow to run on-demand from CLI that builds and uploads to S3
		x Hook up Vercel Production to S3 Bucket push
		x Install Docker
		x Install Jenkins
			x Install and configure Jenkins
			x Set up Docker to correctly build dist of site
			x Set up two versions: one for Test, one for Prod
			x Hook up Jenkins to GitHub
			x Set up Webhook to run Test/Prod CI/CD on push to respective branch/fork
	+ Set up Test environment
		+ Sign up for Vercel
		+ Set up 'dev' fork
		+ Make e-mail address on GitHub private
+ # In Editor, single-render webgl draws over drawer when open
= <web-gl> Enhancements
	+ Use existing font-size attribute instead of custom fontsize
+ # Editing body with WebGL clears the webgl in the header which never reloads (may be fixed by caching step)
+ # After editing with webgl load off, main post page doesn't load webgl either (may be unnecessary after caching step)
= Admin page
	+ Editor: map WebGL div-id to <web-gl...> tag and WebGLElement load and cache it during content update
		+ Migration command: delete and create new viewport, then reconnect existing element
		+ Figure out where this is going bad -- put console outputs everywhere we create a new viewport?
			+ Probably a huge problem in the editor, with typing and whatnot
+ # Scroll to top on navigate is broken
+ # WebGL not clipping on post list when scrolled under navbar
+ # <web-gl> not rendering properly after Twind conversion
	> Looks like a sizing problem -- needs display: block to use size params
	> Nope, it was drop-shadow *facepalm*
= Basic styling
	+ Pick font
	+ Convert to Twind for layout
		+ FAQ page first
			+ Prose for article writing
		+ Rebuild navbar
		+ Rebuild FAQ
		+ Rebuild post-list
		+ Rebuild post-tile
		+ Rebuild post-item
		+ Rebuild edit list
		+ Rebuild editor
+ # WebGL not clipping to owning window properly (see test post in Editor preview)
= <web-gl> Enhancements
	+ Massive inefficiency in WebGL with viewports, resizing/scrolling, rendering
		+ Right now, it sets up new global window listeners for resize and scroll for each new viewport
			> It only cleans up one each on navigate away
		+ If any resize or scroll event happens, it does a full render for each listener that fires, rendering ALL viewports no matter which was actually affected
		x Ideal version: one listener set for each viewport, rendering only the affected ones on events
			x Viewports hold the listeners, trigger renders, and clean them up themselves
				> Elements already clean up their resize listener
			+ WebGL object can still do global renders, but it seems like de-centralizing would be a win here
			> Unfortunately, knowing which <web-gl> is under which scrolling <div> is very difficult due to Shadow DOM, so a single global re-render on scroll is best
		+ The WebGL instance can hold a single listener each for window.resize and document.body.scroll -- it never needs to clean them up
			+ WebGLElement will handle its own scroll logic based on calls via WebGLViewport
		+ # There is a bug with rendering single anims that has them failing to draw the first frame due to fade-in
			+ Animate when fading in regardless of anim status of scene
= QoL
	+ Friendly URL - give each post a mini-URL post string (posts/minimapping)
= Wrap <svg> with component that supports aspect-ratio
	> Note: giving a width="" and viewbox="0 0 100 77" or similar makes it preserve that aspect ratio
+ # app.ts pageActive class can stop changing if you click through pages quickly
+ # Refreshing on a post item (posts/1) will have all the nav buttons with no class
= Admin page
	+ Provide Markdown->HTML live preview editor
		+ Checkbox to enable/disable WebGL embed loads on editor page for performance reasons during editing
		+ Figure out joined scrolling
		x Add "copy to clipboard" button
		x Add "paste from clipboard" button
		x Statistics like word count, image count, embed count
	+ Every time it translates to HTML it needs to clear the old <web-gl> components
	+ Edit change debounce - wait for idle, like 250ms since last typing?
		+ Add timeout for final edit step
	+ Make editor.ts embed on admin.ts
	+ Make new post list that embeds on admin.ts
		+ When you click on a post you can edit it, opening editor.ts with that post ID
	+ Finish editor MVP
		+ In editor, you can hit Save on a post and it will commit the changes to memory in post data (simulating eventually writing to the DB and updating a backup)
		+ Edit title
		+ Edit description
		+ Edit tags
		+ Swap BG colors
		+ Update modified date (create modified date too)
		x Post Visual refresh button
		+ Do Grid-Garden game to see if I can make this grid work properly
	+ Move relevant CSS to external file to include with the editor
= Editor
	+ "Admin" page
= Basic styling
	+ Figure out how to style content coming from Markdown
= Editor
	x Override styling to be full-width
